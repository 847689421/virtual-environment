// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"alibaba.com/virtual-env-operator/pkg/apis/env/v1alpha1.VirtualEnv":       schema_pkg_apis_env_v1alpha1_VirtualEnv(ref),
		"alibaba.com/virtual-env-operator/pkg/apis/env/v1alpha1.VirtualEnvSpec":   schema_pkg_apis_env_v1alpha1_VirtualEnvSpec(ref),
		"alibaba.com/virtual-env-operator/pkg/apis/env/v1alpha1.VirtualEnvStatus": schema_pkg_apis_env_v1alpha1_VirtualEnvStatus(ref),
	}
}

func schema_pkg_apis_env_v1alpha1_VirtualEnv(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VirtualEnv is the Schema for the virtualenvs API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("alibaba.com/virtual-env-operator/pkg/apis/env/v1alpha1.VirtualEnvSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("alibaba.com/virtual-env-operator/pkg/apis/env/v1alpha1.VirtualEnvStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"alibaba.com/virtual-env-operator/pkg/apis/env/v1alpha1.VirtualEnvSpec", "alibaba.com/virtual-env-operator/pkg/apis/env/v1alpha1.VirtualEnvStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_env_v1alpha1_VirtualEnvSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VirtualEnvSpec defines the desired state of VirtualEnv",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"header": {
						SchemaProps: spec.SchemaProps{
							Description: "Header to keep env name in trace",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"evmark": {
						SchemaProps: spec.SchemaProps{
							Description: "Environment variable to mark env name of deployment",
							Type:        []string{"string"},
							Format:      "",
						},
					},
				},
			},
		},
	}
}

func schema_pkg_apis_env_v1alpha1_VirtualEnvStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "VirtualEnvStatus defines the observed state of VirtualEnv",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"envs": {
						SchemaProps: spec.SchemaProps{
							Description: "Available env names",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
				Required: []string{"envs"},
			},
		},
	}
}
